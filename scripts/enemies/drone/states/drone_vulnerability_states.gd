class_name DroneVulnerabilityStates
extends Node

## Dependency Injection
@export_group("Dependencies")
@export var drone: Drone
@export var sc: StateChart

## States Enum
enum State {INVULNERABLE = 0, DEFENDABLE = 1, VULNERABLE = 2}
var state: State = State.INVULNERABLE

## State transition constants
const TRANS_INVULNERABLE_TO_DEFENDABLE: String = "Vulnerability: invulnerable to defendable"

const TRANS_DEFENDABLE_TO_INVULNERABLE: String = "Vulnerability: defendable to invulnerable"
const TRANS_DEFENDABLE_TO_VULNERABLE: String = "Vulnerability: defendable to vulnerable"

const TRANS_VULNERABLE_TO_DEFENDABLE: String = "Vulnerability: vulnerable to defendable"

# invulnerable state
#----------------------------------------
func _on_invulnerable_state_entered() -> void:
	state = State.INVULNERABLE


# defendable state
#----------------------------------------
func _on_defendable_state_entered() -> void:
	state = State.DEFENDABLE


# vulnerable state
#----------------------------------------
func _on_vulnerable_state_entered() -> void:
	state = State.VULNERABLE
