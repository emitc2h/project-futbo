class_name DroneVulnerabilityStates
extends Node

## Dependency Injection
@export_group("Dependencies")
@export var drone: Drone
@export var sc: StateChart
@export var shield: DroneShield

## States Enum
enum State {INVULNERABLE = 0, DEFENDABLE = 1, VULNERABLE = 2}
var state: State = State.INVULNERABLE

## State transition constants
const TRANS_TO_DEFENDABLE: String = "Vulnerability: to defendable"
const TRANS_TO_VULNERABLE: String = "Vulnerability: to vulnerable"
const TRANS_TO_INVULNERABLE: String = "Vulnerability: to invulnerable"


# invulnerable state
#----------------------------------------
func _on_invulnerable_state_entered() -> void:
	state = State.INVULNERABLE
	shield.enabled = true


# defendable state
#----------------------------------------
func _on_defendable_state_entered() -> void:
	state = State.DEFENDABLE
	shield.enabled = false


# vulnerable state
#----------------------------------------
func _on_vulnerable_state_entered() -> void:
	state = State.VULNERABLE
