@tool
class_name SetVulnerabilityAction
extends BTAction

const VULNERABLE: String = "vulnerable"
const DEFENDABLE: String = "defendable"
const INVULNERABLE: String = "invulnerable"

@export_enum(VULNERABLE, DEFENDABLE, INVULNERABLE) var vuln_type: String

var drone: Drone


func _generate_name() -> String:
	return "Set vulnerability to " + vuln_type
		

func _setup() -> void:
	drone = agent as Drone


func _tick(delta: float) -> Status:
	match(vuln_type):
		VULNERABLE:
			drone.become_vulnerable()
		DEFENDABLE:
			drone.become_defendable()
		INVULNERABLE:
			drone.become_invulnerable()
	return SUCCESS
